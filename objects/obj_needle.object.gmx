<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_needle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// HP
maxHP = 100;
hp = maxHP;

// Speed
vel = 5;
pos = 0;
moving = false;
alarm[3] = 10 * room_speed;

// Bouncing up and down
alarm[0] = 1.5 * room_speed;
bouncingUp = true;
bouncing_speed = 0.1;

// Current attack;
attack = noone;
ready = true; // Ready to execute an attack

// Collision
hitting_player = false;

// Shooting anesthetic
alarm[1] = 2 * room_speed;

// Spin attack;
rotate_speed = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_hit, 1, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Ready to execute an attack
ready = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[3] = 10 * room_speed;
moving = true;

// Move to new position
if (pos = 0) {
    hspeed = -vel;
} else if (pos = 1) {
    vspeed = vel;
} else if (pos = 2) {
    hspeed = vel;
} else if (pos = 3) {
    vspeed = -vel;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Spinning attack delay
attack = "spin";
audio_play_sound(snd_whoosh, 1, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Alarm for shooting anesthetic drops
var drop = instance_create(x, y + 152, obj_anesthetic);
alarm[1] = 2 * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Alarm for boss bouncing
bouncingUp = !bouncingUp;
if (attack = "preparing") {
    alarm[0] = 0.1 * room_speed;
} else {
    alarm[0] = 1.5 * room_speed;
    bouncing_speed = 0.1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Bounce up and down
if (attack = noone || attack = "preparing") {
    if (bouncingUp) y += bouncing_speed;
    else y -= bouncing_speed;
}

// Handle boss movement
if (moving) {
    if (pos = 0 &amp;&amp; abs(x - 160) &lt; vel) {
        hspeed = 0;
        pos = 1;
        moving = false;
    } else if (pos = 1 &amp;&amp; abs(y - 576) &lt; vel) {
        vspeed = 0;
        pos = 2;
        moving = false;
    } else if (pos = 2 &amp;&amp; abs(x - 800) &lt; vel) {
        hspeed = 0;
        pos = 3;
        moving = false;
    } else if (pos = 3 &amp;&amp; abs(y - 192) &lt; vel) {
        vspeed = 0;
        pos = 0;
        moving = false;
    }
}

// Spin attack if player is too close
if (attack = noone &amp;&amp; distance_to_object(obj_player) &lt;= 100 &amp;&amp; alarm[2] = -1 &amp;&amp; ready) {
    attack = "preparing";
    image_blend = c_red;
    bouncing_speed = 0.3;
    ready = false;
    alarm[2] = 1.5 * room_speed; // Delay for spin attack
    alarm[0] = 0.1 * room_speed; // Bounce faster to indicate attack
}

// Rotate the sprite for the spin attack
if (attack = "spin") {
    image_angle += rotate_speed;
    alarm[1] = -1;
    if (image_angle &gt;= 360) {
        image_angle = 0;
        attack = noone;
        image_blend = c_white;
        alarm[1] = 2 * room_speed; // Anesthetic
        alarm[4] = 2 * room_speed; // Ready
    }
}

// Check for collision
var col = collision_rectangle(x - 40, y - 153, x + 40, y + 153, obj_player, true, true);
if (col = noone) hitting_player = false;
else hitting_player = true;

if (hitting_player &amp;&amp; alarm[5] = -1) alarm[5] = 0.2 * room_speed;
else if (!hitting_player) alarm[5] = -1;

// Destroy instance
if (hp &lt;= 0) {
    instance_destroy();
    effect_create_above(ef_explosion, x, y, 2, c_red);
    audio_stop_sound(snd_boss1_theme);
    audio_play_sound(snd_explosion, 1, 0);
    global.bosses_killed += 1;
    instance_create(512, 767, obj_door_glow);
    audio_play_sound(snd_door_open, 1, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.hp -= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
