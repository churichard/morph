<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sword</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Invisible at first, only appears when attack button is pressed
image_speed = 0;
image_angle = 180;
visible = 0;
depth = -y + obj_player.weapon_y_offset - 10;
player_hspeed = 0;
player_vspeed = 0;

// If the sword hit an enemy or not
hit = false;
canHit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Alarm for when the player can attack next
obj_player.attacking = false;
image_index = 0;
visible = 0;
player_hspeed = 0;
player_vspeed = 0;

// Reset hit variables
canHit = true;
hit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Flip sprite depending on player orientation
if (obj_player.hspeed &lt; 0) {
    image_angle = 90;
    obj_player.weapon_x_offset = -15;
    obj_player.weapon_y_offset = 0;
    depth = -y + obj_player.weapon_y_offset - 10;
}
else if (obj_player.hspeed &gt; 0) {
    image_angle = -90;
    obj_player.weapon_x_offset = 15;
    obj_player.weapon_y_offset = 0;
    depth = -y + obj_player.weapon_y_offset - 10;
}
else if (obj_player.vspeed &lt; 0) {
    image_angle = 0;
    obj_player.weapon_x_offset = 0;
    obj_player.weapon_y_offset = -15;
    depth = -y + obj_player.weapon_y_offset + 10;
}
else if (obj_player.vspeed &gt; 0) {
    image_angle = 180;
    obj_player.weapon_x_offset = 0;
    obj_player.weapon_y_offset = 15;
    depth = -y + obj_player.weapon_y_offset - 10;
}

// Glide forward when attacking
if (obj_player.attacking) {
    obj_player.x += player_hspeed;
    obj_player.y += player_vspeed;
    if (player_hspeed &lt; 0) player_hspeed += 0.3;
    else if (player_hspeed &gt; 0) player_hspeed -= 0.3;
    if (player_vspeed &lt; 0) player_vspeed += 0.3;
    else if (player_vspeed &gt; 0) player_vspeed -= 0.3;
}

// Play sword hit sound
if (hit &amp;&amp; canHit) {
    hit = false;
    canHit = false;
    audio_play_sound(snd_sword_hit, 1, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_needle">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (visible) {
    hit = true;
    other.hp -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Turn off animation
image_speed = 0;
image_index = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set visibility and image speed
if (!obj_player.attacking) {
    // Play sound
    audio_play_sound(snd_sword_swing, 1, 0);
    
    obj_player.attacking = true;
    visible = 1;
    image_speed = 0.5;
    alarm[0] = 0.5 * room_speed; // When the player can next attack
    player_hspeed = obj_player.hspeed;
    player_vspeed = obj_player.vspeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
